@page "/"


@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using WorkoutPlanner.Context
@using WorkoutPlanner.Model
@using Microsoft.EntityFrameworkCore
@inherits LayoutComponentBase
@attribute [Authorize]
@inject UserProvider UserProvider
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<User> UserManager
@inject WorkoutPlanProvider WorkoutPlanProvider


<PageTitle>Home</PageTitle>


<div class="container d-flex justify-content-center align-items-center" style="min-height: 80vh; background-color: #f0f4f8;">
    <AuthorizeView>
        <NotAuthorized>
            <div class="text-center">
                <h2 class="mb-4" style="color: #333;">Welcome to Your Workout Planner</h2>
                <p class="mb-4" style="color: #555;">Log in or create an account to have your very own workout plan created and reach your fitness goals!</p>
                <div class="d-grid gap-2 d-md-block">
                    <NavLink class="btn btn-outline-primary" href="/Account/Login" Match="NavLinkMatch.Prefix">Login</NavLink>
                    <NavLink class="btn btn-outline-success" href="/Account/Register" Match="NavLinkMatch.Prefix">Register</NavLink>
                   
                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

<h3>Your  Plan</h3>

@if (isLoading)
{
    <p>Loading your workout plan...</p>
}
else if (weekPlans != null && weekPlans.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Week</th>
                @foreach (var day in Enumerable.Range(1, 7))
                {
                    <th>Day @day</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var week in weekPlans)
            {
                <tr>
                    <td>Week @week.WeekNumber</td>
                    @foreach (var day in week.Days)
                    {
                        <td>
                            @if (day.IsRestDay)
                            {
                                <span>Rest</span>
                            }
                            else
                            {
                                
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No workout plan available.</p>
}

@code {
    private List<WeekPlan> weekPlans;
    private List<DayPlan> dayPlans;
    private int day;
    private bool isLoading = true;

    [Parameter] public int Week { get; set; }
    [Parameter] public int Day { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var username = authState?.User?.Identity?.Name;

            if (!string.IsNullOrEmpty(username))
            {
                var user = await UserManager.FindByNameAsync(username);

                if (user != null)
                {
                    weekPlans = await WorkoutPlanProvider.GenerateWorkoutPlanAsync(user.Id, user.DaysAvailable);
                }
            }
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoToPlan()
    {
        NavigationManager.NavigateTo("/plan");
    }

    private void GoToLogin()
    {
        NavigationManager.NavigateTo("/Account/Login");
    }

    private void GoToRegister()
    {
        NavigationManager.NavigateTo("Account/Register");
    }
}


