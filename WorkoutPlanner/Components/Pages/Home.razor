@page "/"

@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using WorkoutPlanner.Context
@using WorkoutPlanner.Model
@using Microsoft.EntityFrameworkCore
@inherits LayoutComponentBase
@attribute [Authorize]
@inject UserProvider UserProvider
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<User> UserManager
@inject WorkoutPlanProvider WorkoutPlanProvider


<PageTitle>Home</PageTitle>


<div class="container d-flex justify-content-center align-items-center" style="min-height: 80vh; background-color: #f0f4f8;">
    <AuthorizeView>
        <NotAuthorized>
            <div class="text-center">
                <h2 class="mb-4" style="color: #333;">Welcome to Your Workout Planner</h2>
                <p class="mb-4" style="color: #555;">Log in or create an account to have your very own workout plan created and reach your fitness goals!</p>
                <div class="d-grid gap-2 d-md-block">
                    <NavLink class="btn btn-outline-primary" href="/Account/Login" Match="NavLinkMatch.Prefix">Login</NavLink>
                    <NavLink class="btn btn-outline-success" href="/Account/Register" Match="NavLinkMatch.Prefix">Register</NavLink>
                   
                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

<main class="container">
    <div class="p-4 rounded" style="background-color: #fff; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
        @Body
    </div>
    <h3>Your Plan</h3>

    @if (isLoading)
    {
        <p>Loading your plan...</p>
    }
    else if (weekPlans != null)
    {
        <table class="table">
            <thead>
                <tr>
                    @for (int week = 1; week <= 4; week++)
                    {
                        <th>Week @week</th>
                    }
                </tr>
            </thead>
            <tbody>
                @for (int day = 1; day <= 7; day++)
                {
                    <tr>
                        @foreach (var week in weekPlans)
                        {
                            <td>
                                @if (week.Days.First(d => d.DayNumber == day).IsRestDay)
                                {
                                    <span>Rest</span>
                                }
                                else
                                {
                                    <a href="/plan?week=@week.WeekNumber&day=@day">View Workout</a>
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No plan available.</p>
    }
</main>

@code{

    private List<WeekPlan> weekPlans;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var username = authState?.User?.Identity?.Name;

            if (!string.IsNullOrEmpty(username))
            {
                var user = await UserManager.FindByNameAsync(username);
                if (user != null)
                {
                    weekPlans = await WorkoutPlanProvider.GenerateWorkoutPlanAsync(user.Id, user.DaysAvailable);
                }
            }
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoToPlan()
    {
        NavigationManager.NavigateTo("/plan");
    }

    private void GoToLogin()
    {
        NavigationManager.NavigateTo("/Account/Login");
    }

    private void GoToRegister()
    {
        NavigationManager.NavigateTo("Account/Register");
    }
}


